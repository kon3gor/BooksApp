def eratosphen(n): # n - это верхняя граница. То есть хотм получить все простые числа <= n
    result = [] # Склдываем сюда найденные простые числа
    sieve = [ True for _ in range(n) ] # [true, true, true, true ... true]
    p = 2 # первое простое число
    while (p <= n): # пока текущий кандидат на звание простого числа меньше n
        if (sieve[p-1]): # проверяем, является ли число простым
            result.append(p) # добавляем найденное простое число в ответ
            for j in range(2 * p, n + 1, p): # теперь нужно выечркнуть все числа меньше или равные n и делящиеся на p (т.е. 2p, 3p, 4p .... n)
                sieve[j-1] = False # число заведомо не простое, потому что оно делится на p 
        p += 1 # переходим к следующему кандидату на роль простого числа

    return result


def countPrimeDividersOf(n):
    e = eratosphen(n) # получаем все простые числа <= n. Пример для n = 10 - [2, 3, 5, 7]
    result = [] # сюда складываем все простые делители числа n
    for num in e: # пробегаемся по всем простым числам меньше n
        if (n % num == 0): # проверяем, делится ли n на простое число из решета Эратосфена 
            result.append(num) # если n нацело делится на num, добавляем num в результат

    return result
